@font-face {
    font-family: "PlusJakartaSans";
    src: url(../media/fonts/PlusJakartaSans.woff2);
    font-weight: 100 900;
    font-style: normal;
}

:root{
    --color-base: #FFFFFF;
    --main-color: #000000;
    --secondary-color: #33CEE5;

    --background-color: var(--color-base);

}
*{
    box-sizing: border-box;
}

.container{
    display: grid;
    grid-template-columns: repeat(6,1fr);
    grid-template-rows: 20% repeat(3, 1fr);
    place-items: center;
    justify-content: space-between;

} 


h1{
    font-family: "PlusJakartaSans";
    color: var(--main-color);
    font-size: 40px;
    line-height: 110%;
    text-align: center;
    font-weight: 700;
    grid-column: 2 / span 4;
    grid-row: 1;
    margin-top: 6rem;
    
}

h3{
    font-family: "PlusJakartaSans";
    color: var(--main-color);
    font-size: 25px;
    font-weight: 500;
    text-align: center;
    grid-column: 2 / span 4;
    grid-row: 2;
    align-self:start;
    margin-top: 5rem;
}

h4{
    font-family: "PlusJakartaSans";
    color: var(--main-color);
    font-size: 20px;
    font-weight: 500;
    line-height: 200%;
    text-align: center;
    grid-column: 2 / span 4;
    grid-row: 2;
    margin-top: 3rem;
}

.rectangle{
    width: 1000px;
    height:239px;
    margin-top: 2rem;
    opacity: 30%;
    background-color: var(--secondary-color);
    grid-column: 2 / span 4;
    grid-row: 2;
    justify-self: center;
    align-self: center;
    z-index: -20;
}

.bold-text {
    font-weight: 700;
    color: var(--secondary-color);
}

.bold-text2 {
    font-weight: 700;
    color: var(--main-color);
}

div{
    display: flex;
    flex-direction: row;
}

#row1{
    grid-column: 3 / span 2;
    grid-row: 3;
    gap:14px;
    margin-top: 2rem;
}

img{
    border: 1px solid #33CEE5;
}

div{
    display: flex;
    flex-direction: row;
}

#row2{
    grid-column: 3 / span 2;
    grid-row: 4;
    gap:14px;
    margin-top: -5rem;
}

.input-container{
    grid-column: 2 / span 4;
    grid-row: 2;
    justify-self: center;
    align-self: center;
    margin-top: 6rem;
    display: flex;
    gap: 1rem; 
    align-items: center;
}

#date-picker{
    margin-top: 1rem;
    font-family: "PlusJakartaSans";

}
#submit-button{
    font-family: "PlusJakartaSans";
    background-color: var(--secondary-color);
    color: var(--main-color);   
    border: 1px solid var(--secondary-color);
    border-radius: 100px;
    margin-left:1rem;
}
.need-help-container{
    grid-column: 5;
    grid-row: 1;

    img{
        border:none;
        height: auto;
        cursor: pointer;
        margin-bottom: -5rem;
        margin-left: 3.5rem;
    }
}
.need-help-container{
    grid-column: 5;
    grid-row: 1;
    position: relative;

}

.needhelp{
    display: flex;
    flex-direction: column;
    align-items: center; 
    justify-content: center; 
    text-align: center;
    position: absolute;
    font-family: "PlusJakartaSans";
    /* transform: translate(70%, -60%); */
    transform: translate(40%, 30%);
    background-color: var(--secondary-color);
    color: black;
    padding: 10px 15px;
    width: auto;
    max-height: 80px;
    overflow: visible;
    line-height: 120%;
    border-radius: 10px;
    font-size: 18px;
    transition: opacity 0.3s ease-in-out;
    text-align: center;
}
.needhelp::after{
    content:'';
    position:absolute;
    bottom: 0;
    left: 30%;
    width: 0;
    height: 0;
    border: 20px solid transparent;
    border-top-color: var(--secondary-color);
    border-bottom: 0;
    border-left: 0;
    margin-left: -10px;
    margin-bottom: -20px;
}
.instructions{
    list-style: none;
    display: none;
    /* margin-top: 10px; */

}
.help-text{
    font-weight: 700;
    display: block;
    text-align: center;
}
.needhelp.expand{
    max-height: 500px;
    width: 300px;
}

.needhelp.expand .instructions{
    text-align: left;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-evenly;
    gap:10px;
    margin-left: -25px;
}
.help-button{
    cursor: pointer;
}

/* .need-help-container{
    grid-column: 5;
    grid-row: 1;
    position:relative;
    display: inline-block;
    cursor: pointer;
}

.needhelp{
    position: absolute;
    transform: translate(130%, -200%);
    font-family: "PlusJakartaSans";
    background-color:var(--secondary-color);
    color: white;
    padding: 10px 15px;
    width: 120px;
    max-height: 60px;
    line-height: 120%;
    border-radius: 10px;
    font-size: 15px;
    transition: opacity 0.3s ease-in-out;
    text-align: center;
}
.needhelp:after{
    content: '';
    position:absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 0;
    border: 20px solid transparent;
    border-top-color: var(--secondary-color);
    border-bottom: 0;
    border-left: 0;
    margin-left: -10px;
    margin-bottom: -20px;
}

.need-help-container img{
    border:none;
    margin-bottom:-3.5rem;
    margin-left: 4rem;
}
.needhelp.expanded {
    max-height: 200px;
    opacity: 1;
}
#help-content{
    grid-column: 6;
    grid-row: 1;
    font-family: "PlusJakartaSans";
    display: none;
    color: var(--main-color);
    font-size: 18px;
    font-weight: 500;
    line-height: 150%;
    text-align: left;
    background-color: var(--secondary-color);
    border-radius: 10px;
    width:390px;

}
.needhelp.expanded #help-content{
    display:block;
}
.instructions ul, .instructions li{
    list-style-type: none;

} */

.close-btn-help{
    position: absolute;
    /* display:none; */
    top: -2px;
    right: 10px;
    color: var(--main-color);
    font-size: 2rem;
    background-color: transparent;
    border: none;
    cursor: pointer;
    transition: var(--background-color) 0.2s, transform 0.2s;
}
.jellycat-card img{
    width: 200px;
    grid-column: 1;
    justify-self: center;
    border: none;
    align-self: center;
}

.jellycat-card h2{
    font-family: "PlusJakartaSans";
    color: var(--main-color);
    font-size: 20px;
    font-weight: 500;
    line-height: 150%;
    text-align: center;
    margin-top: 0;
}
.jellycat-card p{
    font-family: "PlusJakartaSans";
    color: var(--main-color);
    font-size: 18px;
    font-weight: 400;
    line-height: 150%;
}
.jellycat-card{
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    background-color: var(--color-base);
    position: fixed;
    max-height: 90vh;
    width: 50%;
    margin: 0 25vw;
    top: 20vh;
    z-index: 10;
    padding: 3rem;
    border-radius: 50px;
    border: #33CEE5 1px solid;

}
.close-btn{
    position: absolute;
    top: 20px;
    right: 20px;
    color: var(--main-color);
    font-size: 2rem;
    background-color: transparent;
    border: none;
    cursor: pointer;
    transition: var(--background-color) 0.2s, transform 0.2s;
}

.hidden{
    display: none;
}


/* 
const userSubmitBtn = document.getElementById("userSubmit");
userSubmitBtn.addEventListener('click', function () {

    //console.log('Submit button was hit!')

    const usersFirstName = document.getElementById("name").value;
    //console.log('Users first name is ' + usersFirstName)

    const usersBday = new Date(document.getElementById("bday").value);
    //console.log('Users bday is ' + usersBday)

    const whichMonth = usersBday.getUTCMonth() + 1;
    //console.log('The month is ' + whichMonth);

    const whichDayOfMonth = usersBday.getUTCDate();
    //console.log('The day is ' + whichDayOfMonth);


    //ZODIAC ALGORITHM BUT FOR-LOOP AND SOOOO FLY
    for (let i = 0; i < zodiacSign.length; i++) {
        if ((whichMonth == zodiacSign[i].dateStart[0] && whichDayOfMonth >= zodiacSign[i].dateStart[1]) ||
            (whichMonth == zodiacSign[i].dateEnd[0] && whichDayOfMonth <= zodiacSign[i].dateEnd[1])) {

            //reveal zodiac img in html
            image.src = zodiacSign[i].image;

            //play audio
            audio.src = zodiacSign[i].audio;
            audio.play();

            //reveal zodiac text in html + say hi
            text.innerHTML = 'Hi ' + usersFirstName + '! You are  ' + zodiacSign[i].char + '! ' + zodiacSign[i].text;

            //reveal zodiac chracter in html
            char.innerHTML = 'YOU ARE ' + zodiacSign[i].char;

        }
    }

});
let rapper;

    if (yourSign == "Aquarius") {
        audio = document.getElementById("audio-jcole");
        rapper = document.getElementById("jcole");
    }
    else if (yourSign == "Pisces") {
        audio = document.getElementById("audio-tyler");
        rapper = document.getElementById("tyler");
    }
    else if (yourSign == "Aries") {
        audio = document.getElementById("audio-chance");
        rapper = document.getElementById("chance");
    }
    else if (yourSign == "Taurus") {
        audio = document.getElementById("audio-travis");
        rapper = document.getElementById("travis");
    }
    else if (yourSign == "Gemini") {
        audio = document.getElementById("audio-kanye");
        rapper = document.getElementById("kanye");
    }
    else if (yourSign == "Cancer") {
        audio = document.getElementById("audio-post");
        rapper = document.getElementById("post");
    }
    else if (yourSign == "Leo") {
        audio = document.getElementById("audio-uzi");
        rapper = document.getElementById("uzi");
    }
    else if (yourSign == "Virgo") {
        audio = document.getElementById("audio-carti");
        rapper = document.getElementById("carti");
    }
    else if (yourSign == "Libra") {
        audio = document.getElementById("audio-rocky");
        rapper = document.getElementById("rocky");
    }
    else if (yourSign == "Scorpio") {
        audio = document.getElementById("audio-drake");
        rapper = document.getElementById("drake");
    }
    else if (yourSign == "Sagittarius") {
        audio = document.getElementById("audio-nicki");
        rapper = document.getElementById("nicki");
    }
    else if (yourSign == "Capricorn") {
        audio = document.getElementById("audio-mac");
        rapper = document.getElementById("mac");
    }


 */

/* 

 function displayZodiacCard(signData) {
    const card = document.getElementById('jellycat-card');
    const animalImage = document.getElementById('animal-image');
    const animalName = document.getElementById('animal-name');
    const signName = document.getElementById('sign-name');
    const audioPlayer = document.getElementById('animal-sound');
    
    // Set the card content
    animalImage.src = signData.image;
    animalImage.alt = signData.animal;
    animalName.textContent = signData.animal;
    signName.textContent = signData.name.charAt(0).toUpperCase() + signData.name.slice(1);
    audioPlayer.src = signData.sound;
    
    // Play the sound
    audioPlayer.play();
    
    // Show the card
    card.style.display = 'block';
  }
   */